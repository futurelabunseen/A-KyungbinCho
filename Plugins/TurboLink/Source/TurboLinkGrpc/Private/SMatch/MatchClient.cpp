//Generated by TurboLink CodeGenerator, do not edit!
#include "SMatch/MatchClient.h"
#include "SMatch/MatchService.h"
#include "MatchContext.h"
#include "TurboLinkGrpcManager_Private.h"
#include "Templates/SharedPointer.h"

FGrpcContextHandle UMatchClient::InitGetDestination()
{
	FGrpcContextHandle handle = Service->TurboLinkManager->GetNextContextHandle();
	auto context = UGrpcClient::MakeContext<GrpcContext_Match_GetDestination>(handle);
	context->RpcContext = UTurboLinkGrpcManager::Private::CreateRpcClientContext();
	return context->GetHandle();
}

void UMatchClient::GetDestination(FGrpcContextHandle Handle, const FGrpcMatchEmpty& Request)
{
	auto context = UGrpcClient::GetContext(Handle);
	if (context != nullptr)
	{
		auto contextGetDestination = StaticCastSharedPtr<GrpcContext_Match_GetDestination>(*context);
		contextGetDestination->Call(Request);
	}
}

FGrpcContextHandle UMatchClient::InitUpdateToMatchmaker()
{
	FGrpcContextHandle handle = Service->TurboLinkManager->GetNextContextHandle();
	auto context = UGrpcClient::MakeContext<GrpcContext_Match_UpdateToMatchmaker>(handle);
	context->RpcContext = UTurboLinkGrpcManager::Private::CreateRpcClientContext();
	return context->GetHandle();
}

void UMatchClient::UpdateToMatchmaker(FGrpcContextHandle Handle, const FGrpcMatchUpdateRequest& Request)
{
	auto context = UGrpcClient::GetContext(Handle);
	if (context != nullptr)
	{
		auto contextUpdateToMatchmaker = StaticCastSharedPtr<GrpcContext_Match_UpdateToMatchmaker>(*context);
		contextUpdateToMatchmaker->Call(Request);
	}
}

FGrpcContextHandle UMatchClient::InitRemoveFromMatchmaker()
{
	FGrpcContextHandle handle = Service->TurboLinkManager->GetNextContextHandle();
	auto context = UGrpcClient::MakeContext<GrpcContext_Match_RemoveFromMatchmaker>(handle);
	context->RpcContext = UTurboLinkGrpcManager::Private::CreateRpcClientContext();
	return context->GetHandle();
}

void UMatchClient::RemoveFromMatchmaker(FGrpcContextHandle Handle, const FGrpcMatchRemoveRequest& Request)
{
	auto context = UGrpcClient::GetContext(Handle);
	if (context != nullptr)
	{
		auto contextRemoveFromMatchmaker = StaticCastSharedPtr<GrpcContext_Match_RemoveFromMatchmaker>(*context);
		contextRemoveFromMatchmaker->Call(Request);
	}
}

void UMatchClient::TryCancel(FGrpcContextHandle Handle)
{
	auto context = UGrpcClient::GetContext(Handle);
	if (context != nullptr)
	{
		(*context)->TryCancel();
	}
}

void UMatchClient::Shutdown()
{
	OnGetDestinationResponse.Clear();
	OnUpdateToMatchmakerResponse.Clear();
	OnRemoveFromMatchmakerResponse.Clear();
	Super::Shutdown();
}

