//Generated by TurboLink CodeGenerator, do not edit!
#pragma once
#include "CoreMinimal.h"
#include "Kismet/BlueprintAsyncActionBase.h"
#include "TurboLinkGrpcClient.h"
#include "MatchMessage.h"
#include "MatchNode.generated.h"

class UMatch;
class UMatchClient;

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallMatchGetDestination : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FMatchGetDestinationDelegate, const FGrpcResult&, GrpcResult, const FGrpcMatchMatchResponse&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call Match GetDestination"), Category = "TurboLink|Match")
	static UCallMatchGetDestination* GetDestination(UObject* WorldContextObject, const FGrpcMatchEmpty& Request);

	UPROPERTY(BlueprintAssignable)
	FMatchGetDestinationDelegate OnGetDestinationResponse;

	UPROPERTY(BlueprintAssignable)
	FMatchGetDestinationDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	UMatch* Match;
	
	UPROPERTY()
	UMatchClient* MatchClient;
	
	FGrpcContextHandle Context;
	FGrpcMatchEmpty Request;
	EGrpcServiceState ServiceState;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcMatchMatchResponse& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallMatchUpdateToMatchmaker : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FMatchUpdateToMatchmakerDelegate, const FGrpcResult&, GrpcResult, const FGrpcMatchUpdateResponse&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call Match UpdateToMatchmaker"), Category = "TurboLink|Match")
	static UCallMatchUpdateToMatchmaker* UpdateToMatchmaker(UObject* WorldContextObject, const FGrpcMatchUpdateRequest& Request);

	UPROPERTY(BlueprintAssignable)
	FMatchUpdateToMatchmakerDelegate OnUpdateToMatchmakerResponse;

	UPROPERTY(BlueprintAssignable)
	FMatchUpdateToMatchmakerDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	UMatch* Match;
	
	UPROPERTY()
	UMatchClient* MatchClient;
	
	FGrpcContextHandle Context;
	FGrpcMatchUpdateRequest Request;
	EGrpcServiceState ServiceState;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcMatchUpdateResponse& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallMatchRemoveFromMatchmaker : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FMatchRemoveFromMatchmakerDelegate, const FGrpcResult&, GrpcResult, const FGrpcMatchRemoveResponse&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call Match RemoveFromMatchmaker"), Category = "TurboLink|Match")
	static UCallMatchRemoveFromMatchmaker* RemoveFromMatchmaker(UObject* WorldContextObject, const FGrpcMatchRemoveRequest& Request);

	UPROPERTY(BlueprintAssignable)
	FMatchRemoveFromMatchmakerDelegate OnRemoveFromMatchmakerResponse;

	UPROPERTY(BlueprintAssignable)
	FMatchRemoveFromMatchmakerDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	UMatch* Match;
	
	UPROPERTY()
	UMatchClient* MatchClient;
	
	FGrpcContextHandle Context;
	FGrpcMatchRemoveRequest Request;
	EGrpcServiceState ServiceState;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcMatchRemoveResponse& Response);

	void Shutdown();
};
